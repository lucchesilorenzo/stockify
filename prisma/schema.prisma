generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id             String    @id @default(cuid())
  email          String    @unique
  hashedPassword String
  firstName      String
  lastName       String
  dateOfBirth    DateTime?
  phoneNumber    String?
  bio            String?
  address        String?
  city           String?
  zipcode        String?
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
}

model RestockOrder {
  id         String   @id @default(cuid())
  productId  String
  quantity   Int
  subtotal   Float
  shipping   Float
  tax        Float
  totalPrice Float
  status     String   @default("Pending")
  product    Product  @relation(fields: [productId], references: [id])
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model Product {
  id                String              @id @default(cuid())
  categoryId        String
  name              String              @unique
  slug              String              @unique
  barcode           String?
  price             Float
  quantity          Int
  maxQuantity       Int
  minQuantity       Int
  description       String?
  status            String              @default("Available")
  image             String?
  category          Category            @relation(fields: [categoryId], references: [id])
  restockOrder      RestockOrder[]
  customerOrderItem CustomerOrderItem[]
  createdAt         DateTime            @default(now())
  updatedAt         DateTime            @updatedAt
}

model Customer {
  id            String          @id @default(cuid())
  firstName     String
  lastName      String
  email         String          @unique
  phone         String?
  address       String
  city          String
  zipcode       String
  customerOrder CustomerOrder[]
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
}

model CustomerOrder {
  id                String              @id @default(cuid())
  customerId        String
  status            String              @default("Pending")
  customer          Customer            @relation(fields: [customerId], references: [id])
  customerOrderItem CustomerOrderItem[]
  createdAt         DateTime            @default(now())
  updatedAt         DateTime            @updatedAt
}

model CustomerOrderItem {
  id              String        @id @default(cuid())
  productId       String
  customerOrderId String
  quantity        Int
  product         Product       @relation(fields: [productId], references: [id])
  customerOrder   CustomerOrder @relation(fields: [customerOrderId], references: [id])
}

model Category {
  id        String    @id @default(cuid())
  name      String    @unique
  products  Product[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Activity {
  id        String   @id @default(cuid())
  activity  String
  entity    String
  product   String
  createdAt DateTime @default(now())
}
