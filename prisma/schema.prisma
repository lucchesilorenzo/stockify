generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id             String    @id @default(cuid())
  email          String    @unique
  hashedPassword String
  firstName      String
  lastName       String
  dateOfBirth    DateTime?
  phoneNumber    String?
  bio            String?
  address        String?
  city           String?
  zipCode        String?
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
}

model Product {
  id          String   @id @default(cuid())
  categoryId  String
  warehouseId String
  name        String   @unique
  slug        String   @unique
  sku         String?
  price       Float
  quantity    Int
  maxQuantity Int
  description String?
  status      String   @default("In Stock")
  image       String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  category     Category       @relation(fields: [categoryId], references: [id])
  warehouse    Warehouse      @relation(fields: [warehouseId], references: [id])
  restockOrder Order[]
  shipmentItem ShipmentItem[]
}

model Order {
  id         String   @id @default(cuid())
  productId  String
  type       String
  quantity   Int
  subtotal   Float
  shipping   Float
  tax        Float
  totalPrice Float
  status     String   @default("Pending")
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  product Product @relation(fields: [productId], references: [id])
}

model Warehouse {
  id        String   @id @default(cuid())
  name      String   @unique
  location  String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  products Product[]
}

model Customer {
  id        String   @id @default(cuid())
  firstName String
  lastName  String
  email     String   @unique
  phone     String
  address   String
  city      String
  zipCode   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  customerShipment CustomerShipment[]
}

model CustomerShipment {
  id         String   @id @default(cuid())
  customerId String
  status     String   @default("Pending")
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  customer     Customer       @relation(fields: [customerId], references: [id])
  shipmentItem ShipmentItem[]
}

model ShipmentItem {
  id                 String @id @default(cuid())
  productId          String
  customerShipmentId String
  quantity           Int

  product          Product          @relation(fields: [productId], references: [id])
  customerShipment CustomerShipment @relation(fields: [customerShipmentId], references: [id])
}

model Category {
  id        String   @id @default(cuid())
  name      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  products Product[]
}

model Activity {
  id        String   @id @default(cuid())
  activity  String
  entity    String
  product   String?
  createdAt DateTime @default(now())
}

model MonthlyInventoryValue {
  id         String   @id @default(cuid())
  month      DateTime @unique
  totalValue Float
}
